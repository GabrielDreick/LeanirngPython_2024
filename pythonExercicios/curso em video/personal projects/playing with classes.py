def listclasses(lst):
    for i, clas in enumerate(lst):
        print(f'[{i}] {C[clas.name]}{clas.name}{C[""]}')


class Character:
    def __init__(self, name, health=100, attack=13, range=1.0, areaofattack=.05, attackspeed=90, movespeed=4.0):
        """

        :param name: is the name
        :param health: integer
        :param attack: integer
        :param range: float meters
        :param areaofattack: float meters
        :param attackspeed: integer bpm
        :param movespeed: float minutos/segundos
        """

        self.name = name

        self.default_health = health
        self.health = self.default_health

        self.default_attack = attack
        self.attack = self.default_attack

        self.default_range = range
        self.range = self.default_range

        self.default_areaofattack = areaofattack
        self.areaofattack = self.default_areaofattack

        self.default_attackspeed = attackspeed
        self.attackspeed = self.default_attackspeed

        self.default_movespeed = movespeed
        self.movespeed = self.default_movespeed

# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║                                                       HEALTH                                                       ║
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
    def restore_default_health(self):
        self.health = self.default_health

    def health_buff(self, percentage=10):
        self.health += (self.health * percentage / 100)

    def health_debuff(self, percentage=10):
        self.health -= (self.health * percentage / 100)
# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

#

# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║                                                       ATTACK                                                       ║
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
    def restore_default_attack(self):
        self.attack = self.default_attack

    def attack_buff(self, percentage=10):
        self.attack += (self.attack * percentage / 100)

    def attack_debuff(self, percentage=10):
        self.attack -= (self.attack * percentage / 100)
# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

#

# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║                                                       RANGE                                                        ║
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
    def restore_default_range(self):
        self.ran
# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

#

# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║                                                   AREA OF ATTACK                                                   ║
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

#

# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║                                                    ATTACK SPEED                                                    ║
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
    def restore_default_attackspeed(self):
        self.attackspeed = self.default_attackspeed

    def attackspeed_buff(self, percentage=10):
        self.attackspeed += (self.attackspeed * percentage / 100)

    def attackspeed_debuff(self, percentage=10):
        self.attackspeed -= (self.attackspeed * percentage / 100)
# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

#

# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║                                                   MOVEMENT SPEED                                                   ║
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
    def restore_default_speed(self):
        self.movespeed = self.default_movespeed

    def speed_buff(self, percentage=10):
        self.movespeed += (self.movespeed * percentage / 100)

    def speed_debuff(self, percentage=10):
        self.movespeed -= (self.movespeed * percentage / 100)
# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

#

# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║                                                  BUFF AND DEFAULT                                                  ║
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
    def restore_defaults(self):
        self.restore_default_health()
        self.restore_default_attack()
        self.restore_default_speed()

    def buff(self, health=0, attack=0, speed=0):
        self.health_buff(health)
        self.attack_buff(attack)
        self.speed_buff(speed)

    def debuff(self, health=0, attack=0, speed=0):
        self.health_debuff(health)
        self.attack_debuff(attack)
        self.speed_debuff(speed)
# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

#

# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║                                                  BUFF AND DEFAULT                                                  ║
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
    def stats(self):
        print(f'{C[self.name]}    {self.name}{C[""]}\n'
              f'{C["hp"]}Health: {self.health}{C[""]}\n'
              f'{C["atk"]}Attack: {self.attack}{C[""]}\n'
              f'{C["spd"]}Speed: {self.movespeed} M/segundos{C[""]}\n')
# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝


C = {'': '\033[m',
     'Warrior': '\033[38;2;255;50;0m',
     'Engineer': '\033[38;2;255;150;0m',
     'Scout': '\033[38;2;150;255;150m',
     'Void Manipulator': '\033[48;2;50;50;50;38;2;0;0;0m',
     'hp': '\033[38;2;255;100;100m',
     'atk': '\033[38;2;150;50;125m',
     'spd': '\033[38;2;150;150;255m'}

index0 = Character("Index0", 100, 13, 0.80, 0.01, 100, 4.0)
warrior = Character("Warrior", 120, 17, 1.2, 0.03, 170, 3.8)
engineer = Character("Engineer", 100, 13, 0.80, 0.1, 100, 4.0)
scout = Character("Scout", 80, 12, 0.50, 0.1, 200, 5.0)
void_manipulator = Character("Void Manipulator", 50, 25, 20, 3, 30, 4.0)

list_classes = [warrior, engineer, scout, void_manipulator]

listclasses(list_classes)
player_class = str(input("Which class do you want? (number or name)\n"
                             ">"))

list_actions = ['Leave', 'Change Class', 'Add Buff', 'Add Debuff']
while True:
    for i, txt in enumerate(list_actions):
        print(f'[{i}] {txt}')
    choice = int(input('What do you want? '))

    if choice == 1:
        print(1)
    else:
        print('\033[38;2;255;50;50mINVALID\033[0m')

    print(player_class)
    input()
